import { type NextPage } from "next";
import type { RouterOutputs } from "~/utils/api";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import dayjs from "dayjs";
import { LoadingPage } from "~/components/loading";
import relativeTime from "dayjs/plugin/relativeTime";
import { SignInButton, useUser, useClerk } from "@clerk/nextjs";
import { api } from "~/utils/api";
import { TRPCError } from "@trpc/server";
type PostWithUser = RouterOutputs["example"]["getAll"][number];
const PostView = (props: { post: PostWithUser }) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
      <Image
        src={author.profileImageUrl}
        className="h-14 w-14 rounded-full"
        alt={`@${author.username}'s profile picture`}
        width={56}
        height={56}
      />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-300">
          <Link href={`/@${author.name}`}>
            {console.log(post)}
            <span>{`@${author.name} `}</span>
          </Link>
          <Link href={`/post/${post.id}`}>
            {/* <span className="font-thin">{` Â· ${dayjs(
              post.createdAt
            ).fromNow()}`}</span> */}
          </Link>
        </div>
        <span className="text-2xl">{post.content}</span>
      </div>
    </div>
  );
};
const Feed = () => {
  const { data, isLoading: postLoading } = api.example.getAll.useQuery();
  if (postLoading) return <LoadingPage />;
  if (!data) return <div>Something wen wrong</div>;
  return (
    <div className="posts flex-col  ">
      {data?.map(({ post, author }) => (
        <PostView post={post} author={author} />
      ))}
    </div>
  );
};
const Home: NextPage = () => {
  api.example.getAll.useQuery(); //start fetching asap
  const { isLoaded: userLoaded, isSignedIn } = useUser();
  if (!userLoaded) return <div />;
  const { signOut } = useClerk();
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main style={{ backgroundColor: "black", color: "white" }}>
        <div>
          <h1>Sign In</h1>
          <h1>hello</h1>
          {!isSignedIn && <SignInButton />}
          {!!isSignedIn && <button onClick={() => signOut()}>sign out</button>}
        </div>
        <Feed />
      </main>
    </>
  );
};

export default Home;
